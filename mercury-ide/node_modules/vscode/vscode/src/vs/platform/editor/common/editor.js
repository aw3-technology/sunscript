function isResolvedEditorModel(model) {
    const candidate = model;
    return typeof candidate?.resolve === 'function'
        && typeof candidate?.isResolved === 'function';
}
var EditorActivation;
( (function(EditorActivation) {
    EditorActivation[EditorActivation["ACTIVATE"] = 1] = "ACTIVATE";
    EditorActivation[EditorActivation["RESTORE"] = 2] = "RESTORE";
    EditorActivation[EditorActivation["PRESERVE"] = 3] = "PRESERVE";
})(EditorActivation || (EditorActivation = {})));
var EditorResolution;
( (function(EditorResolution) {
    EditorResolution[EditorResolution["PICK"] = 0] = "PICK";
    EditorResolution[EditorResolution["EXCLUSIVE_ONLY"] = 1] = "EXCLUSIVE_ONLY";
})(EditorResolution || (EditorResolution = {})));
var EditorOpenSource;
( (function(EditorOpenSource) {
    EditorOpenSource[EditorOpenSource["API"] = 0] = "API";
    EditorOpenSource[EditorOpenSource["USER"] = 1] = "USER";
})(EditorOpenSource || (EditorOpenSource = {})));
var TextEditorSelectionRevealType;
( (function(TextEditorSelectionRevealType) {
    TextEditorSelectionRevealType[TextEditorSelectionRevealType["Center"] = 0] = "Center";
    TextEditorSelectionRevealType[TextEditorSelectionRevealType["CenterIfOutsideViewport"] = 1] = "CenterIfOutsideViewport";
    TextEditorSelectionRevealType[TextEditorSelectionRevealType["NearTop"] = 2] = "NearTop";
    TextEditorSelectionRevealType[TextEditorSelectionRevealType["NearTopIfOutsideViewport"] = 3] = "NearTopIfOutsideViewport";
})(TextEditorSelectionRevealType || (TextEditorSelectionRevealType = {})));
var TextEditorSelectionSource;
( (function(TextEditorSelectionSource) {
    TextEditorSelectionSource["PROGRAMMATIC"] = "api";
    TextEditorSelectionSource["NAVIGATION"] = "code.navigation";
    TextEditorSelectionSource["JUMP"] = "code.jump";
})(TextEditorSelectionSource || (TextEditorSelectionSource = {})));
export { EditorActivation, EditorOpenSource, EditorResolution, TextEditorSelectionRevealType, TextEditorSelectionSource, isResolvedEditorModel };
