import { localize } from '../../../../nls.js';
import { languagesExtPoint } from '../../../services/language/common/languageService.js';
var DocumentationExtensionPointFields;
( ((function(DocumentationExtensionPointFields) {
    DocumentationExtensionPointFields["when"] = "when";
    DocumentationExtensionPointFields["title"] = "title";
    DocumentationExtensionPointFields["command"] = "command";
})(
    DocumentationExtensionPointFields || (DocumentationExtensionPointFields = {})
)));
const documentationExtensionPointSchema = ( (Object.freeze({
    type: 'object',
    description: ( localize(4562, "Contributed documentation.")),
    properties: {
        'refactoring': {
            type: 'array',
            description: ( localize(4563, "Contributed documentation for refactorings.")),
            items: {
                type: 'object',
                description: ( localize(4564, "Contributed documentation for refactoring.")),
                required: [
                    DocumentationExtensionPointFields.title,
                    DocumentationExtensionPointFields.when,
                    DocumentationExtensionPointFields.command
                ],
                properties: {
                    [DocumentationExtensionPointFields.title]: {
                        type: 'string',
                        description: ( localize(4565, "Label for the documentation used in the UI.")),
                    },
                    [DocumentationExtensionPointFields.when]: {
                        type: 'string',
                        description: ( localize(4566, "When clause.")),
                    },
                    [DocumentationExtensionPointFields.command]: {
                        type: 'string',
                        description: ( localize(4567, "Command executed.")),
                    },
                },
            }
        }
    }
})));
const documentationExtensionPointDescriptor = {
    extensionPoint: 'documentation',
    deps: [languagesExtPoint],
    jsonSchema: documentationExtensionPointSchema
};
export { documentationExtensionPointDescriptor };
