import { localize } from '../../nls.js';
import { ParseErrorCode } from './json.js';
function getParseErrorMessage(errorCode) {
    switch (errorCode) {
        case ParseErrorCode.InvalidSymbol: return ( localize(1162, 'Invalid symbol'));
        case ParseErrorCode.InvalidNumberFormat: return ( localize(1163, 'Invalid number format'));
        case ParseErrorCode.PropertyNameExpected: return ( localize(1164, 'Property name expected'));
        case ParseErrorCode.ValueExpected: return ( localize(1165, 'Value expected'));
        case ParseErrorCode.ColonExpected: return ( localize(1166, 'Colon expected'));
        case ParseErrorCode.CommaExpected: return ( localize(1167, 'Comma expected'));
        case ParseErrorCode.CloseBraceExpected: return ( localize(1168, 'Closing brace expected'));
        case ParseErrorCode.CloseBracketExpected: return ( localize(1169, 'Closing bracket expected'));
        case ParseErrorCode.EndOfFileExpected: return ( localize(1170, 'End of file expected'));
        default:
            return '';
    }
}
export { getParseErrorMessage };
