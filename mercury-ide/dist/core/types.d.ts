export declare const TYPES: {
    CommandRegistry: symbol;
    KeybindingRegistry: symbol;
    MenuRegistry: symbol;
    ContributionProvider: symbol;
    EventBus: symbol;
    FileSystemService: symbol;
    CompilerService: symbol;
    EditorService: symbol;
    LanguageServerClient: symbol;
    TextMateService: symbol;
    DiagnosticsService: symbol;
    IDEService: symbol;
    DatabaseService: symbol;
    UserService: symbol;
    ProjectService: symbol;
    FileService: symbol;
    SessionService: symbol;
    TerminalService: symbol;
    OutputChannelsService: symbol;
    TaskRunnerService: symbol;
    DebugService: symbol;
    WorkspaceService: symbol;
    FileWatcherService: symbol;
    SearchService: symbol;
    RecentFilesService: symbol;
    FileIconService: symbol;
    DragDropService: symbol;
    GitService: symbol;
    SCMProviderFramework: symbol;
    BlameAnnotationService: symbol;
    MergeConflictService: symbol;
    CommandPaletteService: symbol;
    QuickOpenService: symbol;
    SettingsService: symbol;
    NotificationService: symbol;
    StatusBarService: symbol;
    AIService: symbol;
    AICompletionProvider: symbol;
    LoggingService: symbol;
    PerformanceMonitoringService: symbol;
    App: symbol;
    Editor: symbol;
    FileExplorer: symbol;
    OutputPanel: symbol;
    Toolbar: symbol;
    EditorTabs: symbol;
    Breadcrumbs: symbol;
    ProblemsPanel: symbol;
    Terminal: symbol;
    OutputChannels: symbol;
    TaskRunner: symbol;
    DebugPanel: symbol;
    SourceControlPanel: symbol;
    GitHistoryPanel: symbol;
    CommandPalette: symbol;
    QuickOpen: symbol;
    StatusBar: symbol;
    NotificationCenter: symbol;
    AIChatPanel: symbol;
    AIConfigDialog: symbol;
    CommandContribution: symbol;
    MenuContribution: symbol;
    KeybindingContribution: symbol;
};
export interface Newable<T> {
    new (...args: any[]): T;
}
export interface ContributionProvider<T extends object> {
    getContributions(): T[];
}
